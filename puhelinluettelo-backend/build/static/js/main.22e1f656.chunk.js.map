{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","key","id","name","number","onClick","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","className","message","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","indexOf","event","target","preventDefault","existing","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","console","log","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22e1f656.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ persons, deletePerson }) => {\n    return (\n        persons.map(person =>\n            <p key={person.id}>\n                {person.name} {person.number}\n                <button onClick={() => deletePerson(person.id)}>delete</button>\n            </p>\n        )\n    )\n}\n\nexport default Persons","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.addPerson}>\n            <div>\n                name:\n        <input\n                    value={props.newName}\n                    onChange={props.handleNameChange}\n                />\n            </div>\n            <div>\n                number:\n        <input\n                    value={props.newNumber}\n                    onChange={props.handleNumberChange}\n                />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ notification }) => {\n    if (notification === null) {\n        return null\n    }\n\n    return (\n        <div className={notification.type}>\n            {notification.message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst Filter = (props) => {\n\n    return (\n        <input\n            value={props.value}\n            onChange={props.onChange}\n        />\n    )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => {\n        return response.data\n    })\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterString, setStringFilter] = useState('')\n  const [notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n\n  }, [])\n\n  const notifyWith = (message, type = 'success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterStringChange = (event) => {\n    setStringFilter(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}`)\n    if (ok) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} had already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personService.update(existing.id, {\n          name: existing.name,\n          number: newNumber\n        }).then(retunedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : retunedPerson))\n          notifyWith(`Changed number of  ${existing.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber\n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        notifyWith(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        console.log(error.response)\n        notifyWith(`${error.response.data} `, 'error')\n      })\n    }\n  }\n\n  const personsToShow = filterString.length === 0 ?\n    persons :\n    persons.filter(p => p.name.toLowerCase().indexOf(filterString.toLowerCase()) > -1)\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      filter shown with:\n      <Filter\n        value={filterString}\n        onChange={handleFilterStringChange}\n      />\n\n      <h3>add a new</h3>\n      <PersonForm\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}